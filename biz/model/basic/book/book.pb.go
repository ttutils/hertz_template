// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v5.29.3
// source: book.proto

// 该文件定义了图书相关的 Protobuf 消息和服务

package book

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "hertz_template/biz/model/api"
	common "hertz_template/biz/model/common"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建图书请求
type CreateBookReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string  `protobuf:"bytes,1,opt,name=title,proto3" form:"title" json:"title,omitempty" vd:"(len($) > 0 && len($) < 255)"`
	Author  string  `protobuf:"bytes,2,opt,name=author,proto3" form:"author" form:"author" json:"author,omitempty" vd:"(len($) > 0 && len($) < 255)"`
	Year    string  `protobuf:"bytes,3,opt,name=year,proto3" form:"year" json:"year,omitempty" vd:"(len($) == 7 && $ >= '1970-01' && $ <= '2100-12')"`
	Summary *string `protobuf:"bytes,4,opt,name=summary,proto3,oneof" form:"summary" json:"summary,omitempty" vd:"($ == nil || len($) < 1000)"`
}

func (x *CreateBookReq) Reset() {
	*x = CreateBookReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_book_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBookReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBookReq) ProtoMessage() {}

func (x *CreateBookReq) ProtoReflect() protoreflect.Message {
	mi := &file_book_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBookReq.ProtoReflect.Descriptor instead.
func (*CreateBookReq) Descriptor() ([]byte, []int) {
	return file_book_proto_rawDescGZIP(), []int{0}
}

func (x *CreateBookReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateBookReq) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *CreateBookReq) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *CreateBookReq) GetSummary() string {
	if x != nil && x.Summary != nil {
		return *x.Summary
	}
	return ""
}

// 删除图书请求
type DeleteBookReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId string `protobuf:"bytes,1,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty" path:"book_id" vd:"(len($) > 0)"`
}

func (x *DeleteBookReq) Reset() {
	*x = DeleteBookReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_book_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBookReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBookReq) ProtoMessage() {}

func (x *DeleteBookReq) ProtoReflect() protoreflect.Message {
	mi := &file_book_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBookReq.ProtoReflect.Descriptor instead.
func (*DeleteBookReq) Descriptor() ([]byte, []int) {
	return file_book_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteBookReq) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

// 更新图书请求
type UpdateBookReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId  string  `protobuf:"bytes,1,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty" path:"book_id" vd:"(len($) > 0)"`
	Title   *string `protobuf:"bytes,2,opt,name=title,proto3,oneof" form:"title" json:"title,omitempty" vd:"($ == nil || (len($) > 0 && len($) < 255))"`
	Author  *string `protobuf:"bytes,3,opt,name=author,proto3,oneof" form:"author" json:"author,omitempty" vd:"($ == nil || (len($) > 0 && len($) < 255))"`
	Year    *string `protobuf:"bytes,4,opt,name=year,proto3,oneof" form:"year" form:"year" json:"year,omitempty" vd:"($ == nil || (len($) == 7 && $ >= '1970-01' && $ <= '2100-12'))"`
	Summary *string `protobuf:"bytes,5,opt,name=summary,proto3,oneof" form:"summary" json:"summary,omitempty" vd:"($ == nil || len($) < 1000)"`
}

func (x *UpdateBookReq) Reset() {
	*x = UpdateBookReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_book_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBookReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBookReq) ProtoMessage() {}

func (x *UpdateBookReq) ProtoReflect() protoreflect.Message {
	mi := &file_book_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBookReq.ProtoReflect.Descriptor instead.
func (*UpdateBookReq) Descriptor() ([]byte, []int) {
	return file_book_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateBookReq) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

func (x *UpdateBookReq) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *UpdateBookReq) GetAuthor() string {
	if x != nil && x.Author != nil {
		return *x.Author
	}
	return ""
}

func (x *UpdateBookReq) GetYear() string {
	if x != nil && x.Year != nil {
		return *x.Year
	}
	return ""
}

func (x *UpdateBookReq) GetSummary() string {
	if x != nil && x.Summary != nil {
		return *x.Summary
	}
	return ""
}

// 通用响应
type CommonBookResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code common.Code `protobuf:"varint,1,opt,name=code,proto3,enum=Code" form:"code" json:"code,omitempty" query:"code"`
	Msg  string      `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
}

func (x *CommonBookResp) Reset() {
	*x = CommonBookResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_book_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonBookResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonBookResp) ProtoMessage() {}

func (x *CommonBookResp) ProtoReflect() protoreflect.Message {
	mi := &file_book_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonBookResp.ProtoReflect.Descriptor instead.
func (*CommonBookResp) Descriptor() ([]byte, []int) {
	return file_book_proto_rawDescGZIP(), []int{3}
}

func (x *CommonBookResp) GetCode() common.Code {
	if x != nil {
		return x.Code
	}
	return common.Code(0)
}

func (x *CommonBookResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 图书列表请求
type BookListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty" query:"page" vd:"$ >= 1"`
	PageSize int32   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty" query:"page_size" vd:"$ >= 1 && $ <= 100"`
	Title    *string `protobuf:"bytes,3,opt,name=title,proto3,oneof" json:"title,omitempty" query:"title" vd:"($ == nil || len($) < 255)"`
	Author   *string `protobuf:"bytes,4,opt,name=author,proto3,oneof" json:"author,omitempty" query:"author" vd:"($ == nil || len($) < 255)"`
}

func (x *BookListReq) Reset() {
	*x = BookListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_book_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookListReq) ProtoMessage() {}

func (x *BookListReq) ProtoReflect() protoreflect.Message {
	mi := &file_book_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookListReq.ProtoReflect.Descriptor instead.
func (*BookListReq) Descriptor() ([]byte, []int) {
	return file_book_proto_rawDescGZIP(), []int{4}
}

func (x *BookListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *BookListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *BookListReq) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *BookListReq) GetAuthor() string {
	if x != nil && x.Author != nil {
		return *x.Author
	}
	return ""
}

// 图书列表响应
type BookListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  common.Code     `protobuf:"varint,1,opt,name=code,proto3,enum=Code" form:"code" json:"code,omitempty" query:"code"`
	Msg   string          `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Total int64           `protobuf:"varint,3,opt,name=total,proto3" form:"total" json:"total,omitempty" query:"total"`
	Data  []*BookListData `protobuf:"bytes,4,rep,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *BookListResp) Reset() {
	*x = BookListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_book_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookListResp) ProtoMessage() {}

func (x *BookListResp) ProtoReflect() protoreflect.Message {
	mi := &file_book_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookListResp.ProtoReflect.Descriptor instead.
func (*BookListResp) Descriptor() ([]byte, []int) {
	return file_book_proto_rawDescGZIP(), []int{5}
}

func (x *BookListResp) GetCode() common.Code {
	if x != nil {
		return x.Code
	}
	return common.Code(0)
}

func (x *BookListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BookListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *BookListResp) GetData() []*BookListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BookListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId  string `protobuf:"bytes,1,opt,name=book_id,json=bookId,proto3" form:"book_id" json:"book_id,omitempty" query:"book_id"`
	Title   string `protobuf:"bytes,2,opt,name=title,proto3" form:"title" json:"title,omitempty" query:"title"`
	Author  string `protobuf:"bytes,3,opt,name=author,proto3" form:"author" json:"author,omitempty" query:"author"`
	Year    string `protobuf:"bytes,4,opt,name=year,proto3" form:"year" json:"year,omitempty" query:"year"`
	Summary string `protobuf:"bytes,5,opt,name=summary,proto3" form:"summary" json:"summary,omitempty" query:"summary"`
}

func (x *BookListData) Reset() {
	*x = BookListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_book_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookListData) ProtoMessage() {}

func (x *BookListData) ProtoReflect() protoreflect.Message {
	mi := &file_book_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookListData.ProtoReflect.Descriptor instead.
func (*BookListData) Descriptor() ([]byte, []int) {
	return file_book_proto_rawDescGZIP(), []int{6}
}

func (x *BookListData) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

func (x *BookListData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BookListData) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *BookListData) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *BookListData) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

var File_book_proto protoreflect.FileDescriptor

var file_book_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x1a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe4, 0x02,
	0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x12,
	0x48, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x32,
	0xca, 0xbb, 0x18, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0xda, 0xbb, 0x18, 0x1c, 0x28, 0x6c, 0x65,
	0x6e, 0x28, 0x24, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x20, 0x26, 0x26, 0x20, 0x6c, 0x65, 0x6e, 0x28,
	0x24, 0x29, 0x20, 0x3c, 0x20, 0x32, 0x35, 0x35, 0x29, 0xe2, 0xbb, 0x18, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x4c, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x34, 0xca, 0xbb, 0x18, 0x06, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0xda, 0xbb, 0x18, 0x1c, 0x28, 0x6c, 0x65, 0x6e, 0x28, 0x24, 0x29,
	0x20, 0x3e, 0x20, 0x30, 0x20, 0x26, 0x26, 0x20, 0x6c, 0x65, 0x6e, 0x28, 0x24, 0x29, 0x20, 0x3c,
	0x20, 0x32, 0x35, 0x35, 0x29, 0xe2, 0xbb, 0x18, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x59, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x45, 0xca, 0xbb, 0x18, 0x04, 0x79, 0x65, 0x61, 0x72, 0xda,
	0xbb, 0x18, 0x31, 0x28, 0x6c, 0x65, 0x6e, 0x28, 0x24, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x37, 0x20,
	0x26, 0x26, 0x20, 0x24, 0x20, 0x3e, 0x3d, 0x20, 0x27, 0x31, 0x39, 0x37, 0x30, 0x2d, 0x30, 0x31,
	0x27, 0x20, 0x26, 0x26, 0x20, 0x24, 0x20, 0x3c, 0x3d, 0x20, 0x27, 0x32, 0x31, 0x30, 0x30, 0x2d,
	0x31, 0x32, 0x27, 0x29, 0xe2, 0xbb, 0x18, 0x04, 0x79, 0x65, 0x61, 0x72, 0x52, 0x04, 0x79, 0x65,
	0x61, 0x72, 0x12, 0x54, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x35, 0xca, 0xbb, 0x18, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0xda, 0xbb, 0x18, 0x1b, 0x28, 0x24, 0x20, 0x3d, 0x3d, 0x20, 0x6e, 0x69, 0x6c, 0x20, 0x7c, 0x7c,
	0x20, 0x6c, 0x65, 0x6e, 0x28, 0x24, 0x29, 0x20, 0x3c, 0x20, 0x31, 0x30, 0x30, 0x30, 0x29, 0xe2,
	0xbb, 0x18, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x22, 0x45, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1b, 0xd2, 0xbb, 0x18, 0x07, 0x62, 0x6f, 0x6f, 0x6b,
	0x5f, 0x69, 0x64, 0xda, 0xbb, 0x18, 0x0c, 0x28, 0x6c, 0x65, 0x6e, 0x28, 0x24, 0x29, 0x20, 0x3e,
	0x20, 0x30, 0x29, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x22, 0xf1, 0x03, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a,
	0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1b,
	0xd2, 0xbb, 0x18, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0xda, 0xbb, 0x18, 0x0c, 0x28,
	0x6c, 0x65, 0x6e, 0x28, 0x24, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x29, 0x52, 0x06, 0x62, 0x6f, 0x6f,
	0x6b, 0x49, 0x64, 0x12, 0x5b, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x40, 0xca, 0xbb, 0x18, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0xda, 0xbb, 0x18,
	0x2a, 0x28, 0x24, 0x20, 0x3d, 0x3d, 0x20, 0x6e, 0x69, 0x6c, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x6c,
	0x65, 0x6e, 0x28, 0x24, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x20, 0x26, 0x26, 0x20, 0x6c, 0x65, 0x6e,
	0x28, 0x24, 0x29, 0x20, 0x3c, 0x20, 0x32, 0x35, 0x35, 0x29, 0x29, 0xe2, 0xbb, 0x18, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x5f, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x42, 0xca, 0xbb, 0x18, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0xda, 0xbb, 0x18, 0x2a,
	0x28, 0x24, 0x20, 0x3d, 0x3d, 0x20, 0x6e, 0x69, 0x6c, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x6c, 0x65,
	0x6e, 0x28, 0x24, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x20, 0x26, 0x26, 0x20, 0x6c, 0x65, 0x6e, 0x28,
	0x24, 0x29, 0x20, 0x3c, 0x20, 0x32, 0x35, 0x35, 0x29, 0x29, 0xe2, 0xbb, 0x18, 0x06, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x48, 0x01, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x6c, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x53, 0xca, 0xbb, 0x18, 0x04, 0x79, 0x65, 0x61, 0x72, 0xda, 0xbb, 0x18, 0x3f, 0x28, 0x24, 0x20,
	0x3d, 0x3d, 0x20, 0x6e, 0x69, 0x6c, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x6c, 0x65, 0x6e, 0x28, 0x24,
	0x29, 0x20, 0x3d, 0x3d, 0x20, 0x37, 0x20, 0x26, 0x26, 0x20, 0x24, 0x20, 0x3e, 0x3d, 0x20, 0x27,
	0x31, 0x39, 0x37, 0x30, 0x2d, 0x30, 0x31, 0x27, 0x20, 0x26, 0x26, 0x20, 0x24, 0x20, 0x3c, 0x3d,
	0x20, 0x27, 0x32, 0x31, 0x30, 0x30, 0x2d, 0x31, 0x32, 0x27, 0x29, 0x29, 0xe2, 0xbb, 0x18, 0x04,
	0x79, 0x65, 0x61, 0x72, 0x48, 0x02, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x54, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x35, 0xca, 0xbb, 0x18, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0xda, 0xbb, 0x18,
	0x1b, 0x28, 0x24, 0x20, 0x3d, 0x3d, 0x20, 0x6e, 0x69, 0x6c, 0x20, 0x7c, 0x7c, 0x20, 0x6c, 0x65,
	0x6e, 0x28, 0x24, 0x29, 0x20, 0x3c, 0x20, 0x31, 0x30, 0x30, 0x30, 0x29, 0xe2, 0xbb, 0x18, 0x07,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x48, 0x03, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x79,
	0x65, 0x61, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22,
	0x3d, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x19, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x05, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x97,
	0x02, 0x0a, 0x0b, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x26,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x12, 0xb2, 0xbb,
	0x18, 0x04, 0x70, 0x61, 0x67, 0x65, 0xda, 0xbb, 0x18, 0x06, 0x24, 0x20, 0x3e, 0x3d, 0x20, 0x31,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x23, 0xb2, 0xbb, 0x18, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0xda, 0xbb, 0x18, 0x12, 0x24, 0x20, 0x3e, 0x3d,
	0x20, 0x31, 0x20, 0x26, 0x26, 0x20, 0x24, 0x20, 0x3c, 0x3d, 0x20, 0x31, 0x30, 0x30, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0xb2, 0xbb, 0x18, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0xda, 0xbb, 0x18, 0x1a, 0x28, 0x24, 0x20, 0x3d, 0x3d, 0x20, 0x6e, 0x69, 0x6c, 0x20,
	0x7c, 0x7c, 0x20, 0x6c, 0x65, 0x6e, 0x28, 0x24, 0x29, 0x20, 0x3c, 0x20, 0x32, 0x35, 0x35, 0x29,
	0x48, 0x00, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x28, 0xb2, 0xbb,
	0x18, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0xda, 0xbb, 0x18, 0x1a, 0x28, 0x24, 0x20, 0x3d,
	0x3d, 0x20, 0x6e, 0x69, 0x6c, 0x20, 0x7c, 0x7c, 0x20, 0x6c, 0x65, 0x6e, 0x28, 0x24, 0x29, 0x20,
	0x3c, 0x20, 0x32, 0x35, 0x35, 0x29, 0x48, 0x01, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x22, 0x7f, 0x0a, 0x0c, 0x42, 0x6f, 0x6f, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x05, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x83, 0x01, 0x0a, 0x0c, 0x42, 0x6f,
	0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f,
	0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6f, 0x6f,
	0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x32,
	0x80, 0x03, 0x0a, 0x0b, 0x42, 0x6f, 0x6f, 0x6b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12,
	0x56, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x19, 0x2e,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x11, 0xda, 0xc1, 0x18, 0x0d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62,
	0x6f, 0x6f, 0x6b, 0x2f, 0x61, 0x64, 0x64, 0x12, 0x62, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x19, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x62, 0x6f,
	0x6f, 0x6b, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1d, 0xe2, 0xc1,
	0x18, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x2f, 0x3a, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x12, 0x62, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x19, 0x2e, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x6f,
	0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x1d, 0xd2, 0xc1, 0x18, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x2f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x3a, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x12,
	0x51, 0x0a, 0x08, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x6f,
	0x6b, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x12,
	0xca, 0xc1, 0x18, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x42, 0x21, 0x5a, 0x1f, 0x68, 0x65, 0x72, 0x74, 0x7a, 0x5f, 0x64, 0x65, 0x6d, 0x6f,
	0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_book_proto_rawDescOnce sync.Once
	file_book_proto_rawDescData = file_book_proto_rawDesc
)

func file_book_proto_rawDescGZIP() []byte {
	file_book_proto_rawDescOnce.Do(func() {
		file_book_proto_rawDescData = protoimpl.X.CompressGZIP(file_book_proto_rawDescData)
	})
	return file_book_proto_rawDescData
}

var file_book_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_book_proto_goTypes = []interface{}{
	(*CreateBookReq)(nil),  // 0: basic.book.CreateBookReq
	(*DeleteBookReq)(nil),  // 1: basic.book.DeleteBookReq
	(*UpdateBookReq)(nil),  // 2: basic.book.UpdateBookReq
	(*CommonBookResp)(nil), // 3: basic.book.CommonBookResp
	(*BookListReq)(nil),    // 4: basic.book.BookListReq
	(*BookListResp)(nil),   // 5: basic.book.BookListResp
	(*BookListData)(nil),   // 6: basic.book.BookListData
	(common.Code)(0),       // 7: Code
}
var file_book_proto_depIdxs = []int32{
	7, // 0: basic.book.CommonBookResp.code:type_name -> Code
	7, // 1: basic.book.BookListResp.code:type_name -> Code
	6, // 2: basic.book.BookListResp.data:type_name -> basic.book.BookListData
	0, // 3: basic.book.BookHandler.CreateBook:input_type -> basic.book.CreateBookReq
	1, // 4: basic.book.BookHandler.DeleteBook:input_type -> basic.book.DeleteBookReq
	2, // 5: basic.book.BookHandler.UpdateBook:input_type -> basic.book.UpdateBookReq
	4, // 6: basic.book.BookHandler.BookList:input_type -> basic.book.BookListReq
	3, // 7: basic.book.BookHandler.CreateBook:output_type -> basic.book.CommonBookResp
	3, // 8: basic.book.BookHandler.DeleteBook:output_type -> basic.book.CommonBookResp
	3, // 9: basic.book.BookHandler.UpdateBook:output_type -> basic.book.CommonBookResp
	5, // 10: basic.book.BookHandler.BookList:output_type -> basic.book.BookListResp
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_book_proto_init() }
func file_book_proto_init() {
	if File_book_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_book_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBookReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_book_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBookReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_book_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBookReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_book_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonBookResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_book_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_book_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_book_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_book_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_book_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_book_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_book_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_book_proto_goTypes,
		DependencyIndexes: file_book_proto_depIdxs,
		MessageInfos:      file_book_proto_msgTypes,
	}.Build()
	File_book_proto = out.File
	file_book_proto_rawDesc = nil
	file_book_proto_goTypes = nil
	file_book_proto_depIdxs = nil
}
