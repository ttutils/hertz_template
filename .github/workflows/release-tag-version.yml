name: release-tag-version

on:
  push:
    tags:
      - "v*"
      - "!v*-rc*"
      - "!v*-dev"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  binary:
    runs-on: ubuntu-latest
    permissions:
      packages: write # to publish to ghcr.io
    steps:
      - uses: actions/checkout@v4
      - run: git fetch --unshallow --quiet --tags --force
      - name: Checkout web
        uses: actions/checkout@v4
        with:
          repository: buyfakett/react_admin_template
          token: ${{ secrets.RELEASE_TOKEN }}
          path: web
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: build web
        run: |
          cd web/
          npm install -g pnpm
          pnpm install
          pnpm run build
          cd ..
          mkdir static/
          cp -r web/dist/* static/
          rm -rf web/
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
      - run: /bin/bash -x build.sh ${{ github.ref_name }}
      - name: Install GH CLI
        uses: dev-hanz-ops/install-gh-cli-action@v0.2.1
        with:
          gh-cli-version: 2.71.2
      - name: create github release
        run: |
          gh release create ${{ github.ref_name }} --title ${{ github.ref_name }} --notes-from-tag dist/release/*
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
  docker-rootful:
    runs-on: ubuntu-latest
    permissions:
      packages: write # to publish to ghcr.io
    steps:
      - uses: actions/checkout@v4
      - run: git fetch --unshallow --quiet --tags --force
      - name: Checkout web
        uses: actions/checkout@v4
        with:
          repository: buyfakett/semi-design-pro
          token: ${{ secrets.RELEASE_TOKEN }}
          path: web
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: build web
        run: |
          cd web/
          npm install -g pnpm
          pnpm install
          pnpm run build
          cd ..
          mkdir static/
          cp -r web/dist/* static/
          rm -rf web/
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: |-
            buyfakett/hertz_template
            ghcr.io/buyfakett/hertz_template
          # this will generate tags in the following format:
          # latest
          # 1
          # 1.2
          # 1.2.3
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GHCR using PAT
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build rootful docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}